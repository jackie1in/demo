buildscript {
	repositories {
		mavenLocal()
		maven {url 'https://maven.aliyun.com/nexus/content/groups/public/'}
		maven {url "https://plugins.gradle.org/m2/"}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.netflix.nebula:gradle-extra-configurations-plugin:3.2.0"
		classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:3.2.0"
	}
}
subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	group "$group"
	version = '0.0.1-SNAPSHOT'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8


	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}


	repositories {
		mavenLocal()
		maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		mavenCentral()
	}

	// spring boot项目使用插件管理项目
	if (it.name.startsWith('springboot') || ['rabbit'].contains(it.name)) {
		apply plugin: "org.springframework.boot"
		apply plugin: 'io.spring.dependency-management'
		apply plugin: 'com.google.cloud.tools.jib'

		dependencies {
			compile('org.springframework.boot:spring-boot-starter')
			testCompile('org.springframework.boot:spring-boot-starter-test')
			compileOnly 'org.projectlombok:lombok:1.18.22'
			annotationProcessor 'org.projectlombok:lombok:1.18.22'
			testCompileOnly 'org.projectlombok:lombok:1.18.22'
		}

		jib.to.image = "${project_id}/${project.name}:${version}"

		dependencyManagement {
			imports {
				mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
			}
		}
	}
}

